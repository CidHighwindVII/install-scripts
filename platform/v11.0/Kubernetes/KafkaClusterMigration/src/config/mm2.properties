# based on https://github.com/apache/kafka/blob/trunk/config/connect-mirror-maker.properties
# and https://learn.microsoft.com/en-us/azure/hdinsight/kafka/apache-kafka-mirror-maker-2

# specify any number of cluster aliases
clusters = source, target

# connection information for each cluster
# This is a comma separated host:port pairs for each cluster
# for e.g. "A_host1:9092, A_host2:9092, A_host3:9092"
source.bootstrap.servers = ${SOURCE_BOOTSTRAP_SERVERS}
target.bootstrap.servers = ${TARGET_BOOTSTRAP_SERVERS}
target.security.protocol = ${SECURITY_PROTOCOL}
target.ssl.keystore.type = ${SSL_TYPE}
target.ssl.keystore.location = ${SSL_KEYSTORE_LOCATION}
target.ssl.keystore.password = ${SSL_KEYSTORE_PASSWORD}
target.ssl.key.password = ${SSL_KEYSTORE_PASSWORD}
target.ssl.truststore.type = ${SSL_TYPE}
target.ssl.truststore.location = ${SSL_TRUSTSTORE_LOCATION}
target.ssl.truststore.password = ${SSL_TRUSTSTORE_PASSWORD}

# enable and configure individual replication flows
source->target.enabled = true
# regex which defines which topics gets replicated. For eg "foo-.*"
source->target.topics = .*
# regex which defines which groups gets replicated. For eg "foo-.*"
groups = .*
# If we donâ€™t want to replicate internal topics across clusters, then use following property
topics.blacklist="*.internal,__.*"

# For automated consumer offset sync, we need to enable replication and control the sync duration too
emit.checkpoints.enabled = true  
emit.checkpoints.interval.seconds = 5
source->target.sync.group.offsets.enabled = true 
source->target.sync.group.offsets.interval.ms=5000 

# Replace topic naming class
replication.policy.class=cmf.kafkaclustermigration.RenameTopicReplicationPolicy

emit.heartbeats.interval.seconds = 30

# Setting replication factor of newly created remote topics
replication.factor=${MIGRATED_TOPICS_REPLICATION_FACTOR}

############################# Internal Topic Settings  #############################
# The replication factor for mm2 internal topics "heartbeats", "target.checkpoints.internal" and
# "mm2-offset-syncs.target.internal"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
checkpoints.topic.replication.factor=${MM2_REPLICATION_FACTOR}
heartbeats.topic.replication.factor=${MM2_REPLICATION_FACTOR}
offset-syncs.topic.replication.factor=${MM2_REPLICATION_FACTOR}

# The replication factor for connect internal topics "mm2-configs.target.internal", "mm2-offsets.target.internal" and
# "mm2-status.target.internal"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offset.storage.replication.factor=${MM2_REPLICATION_FACTOR}
status.storage.replication.factor=${MM2_REPLICATION_FACTOR}
config.storage.replication.factor=${MM2_REPLICATION_FACTOR}

# customize as needed
# replication.policy.separator = _
# sync.topic.acls.enabled = false
emit.heartbeats.interval.seconds = 30
