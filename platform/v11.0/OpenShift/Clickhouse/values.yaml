# Default values for clickhouse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: clickhouse/clickhouse-server:24.2
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   memory: 6Gi
  # requests:
  #   cpu: 200m
  #   memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

# Service
service:
  name: clickhouse
  type: ClusterIP
  nativetls:
    port: 9440
    name: nativetls
  https:
    port: 8443
    name: https

# Route
ingress:
  enabled: false
  name: clickhouse
  hostSuffix: <cluster suffix>

# Volumes
clickhouseData:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs
  pvcName: clickhouse-data
  volumeName: ""

clickhouseLog:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs
  pvcName: clickhouse-log
  volumeName: ""

# Config maps
usersConfig:
  name: users
  defaultPassword: <Clickhouse default user password>

clickhouseConfig:
  name: config
  openSSL:
    validateCertificates: false
    invalidCertificateHandler: AcceptCertificateHandler

# Secrets
kafka:  
  useClientCredentials: true
  # When using SASL Plain authentication method
  sasl: 
    username: theUsername
    password: thePassword
  clientCredentials:
    useExistingSecret: true
    validateCertificates: false
    # When using AMQ Streams the user can specify a secret that contains the Cluster CA, user private key and user public key
    # Cluster CA: root.crt
    # User public key: client.crt
    # User private key: client.key
    secretName: <Secret name with kafka certificates>
    credentialsLocation: /tmp/ClickHouseData/Certificates/Kafka/
    # When there is no existing secret
    caCertificate: ""
    clientPublicKey: ""
    clientPrivateKey: ""


clickhouse:
  secretName: clickhouse-secrets
  tls:
    autoGenerated: true
    caCertificate: ""
    serverCertificate: ""
    serverKey: ""